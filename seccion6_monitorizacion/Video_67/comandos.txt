### Metrics server

helm repo add bitnami https://charts.bitnami.com/bitnami
helm install metrics-server -n kube-system bitnami/metrics-server

### Prometheus
# Creamos un namespace para prometheus
kubectl create ns monitoring 
o
kubectl create namespace prometheus

helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
helm repo update

# Antes de instalar prometheus, es necesario hacer la autenticacion oidc y desplegar el driver
# CSI como en el paso 6 de las instrucciones de repaso final de la seccion de EKS. El CSI 
# permite aprovisionar volumenes

# Instalamos en el namespace monitoring. Revisar el comando en la doc de aws eks prometheus
helm upgrade -i prometheus prometheus-community/prometheus \
    --namespace prometheus \
    --set alertmanager.persistence.storageClass="gp2" \
    --set server.persistentVolume.storageClass="gp2"


# Forward del puerto para acceder al server de prometheus
kubectl --namespace=prometheus port-forward deploy/prometheus-server 9090

http://localhost:9090
con esto ya se puede abrir en localhost:8080

# Escalar nodos
eksctl scale nodegroup --cluster=mi-cluster --name=group-1 --nodes=3


# grafana
helm repo add grafana https://grafana.github.io/helm-charts
helm repo update
helm install -n monitoring grafana grafana/grafana
# Obtener pass de grafana
kubectl -n monitoring get secrets grafana -o yaml
# Hacer al password para obtener su valor real pues esta en base64:
echo password |base64 -d
echo R09EeDZWT3VXSjRBbExmNE9TSnhGREozamhnOHd1b1dRYWQwcjlXOA== |base64 -d
contrasena real: GODx6VOuWJ4AlLf4OSJxFDJ3jhg8wuoWQad0r9W8
El usuario es admin
# port forwarding
kubectl -n monitoring port-forward svc/grafana 8080:80
# Abrir grafana en localhost:8080
# Grafana abrio en mozilla pero no en chrome


# dashboard de grafana imortantes:
importar dashboard 10000 y 15661
https://grafana.com/grafana/dashboards/15661

# Desinstalaciones
helm uninstall prometheus -n monitoring
helm uninstall grafana -n monitoring