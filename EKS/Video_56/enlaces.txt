# enlaces
https://github.com/kubernetes-sigs/aws-load-balancer-controller
https://docs.aws.amazon.com/eks/latest/userguide/alb-ingress.html
https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.2/guide/ingress/annotations/
https://aws.amazon.com/blogs/containers/introducing-oidc-identity-provider-authentication-amazon-eks/

## Crear politica (nos paramos en la ruta de la carpeta Video_56 para que jale asi) y revisar
## que la policita AWSLoadBalancerControllerIAMPolicy exista en IAM -> Policies
aws iam create-policy \
    --policy-name AWSLoadBalancerControllerIAMPolicy \
    --policy-document file://iam_policy.json


## activar autenticacion oidc con el cluster
eksctl utils associate-iam-oidc-provider --cluster cluster_name --approve
# Eliminar proveedor de autenticacion
ve a IAM -> identityproviders -> elimina el proveedor de tu cluster eks

## Service account. Checar el ARN en IAM -> Policies -> Elegir policie y ver su arn
eksctl create iamserviceaccount \
  --cluster=cluster_name \
  --namespace=kube-system \
  --name=aws-load-balancer-controller \
  --role-name "AmazonEKSLoadBalancerControllerRole" \
  --attach-policy-arn=tu_ARN \
  --approve

# En mi caso:
eksctl create iamserviceaccount \
  --cluster=mi-cluster \
  --namespace=kube-system \
  --name=aws-load-balancer-controller \
  --role-name "AmazonEKSLoadBalancerControllerRole" \
  --attach-policy-arn=arn:aws:iam::590184078061:policy/AWSLoadBalancerControllerIAMPolicy \
  --approve 
  
# Eliminarlo
# kubectl delete iamserviceaccount aws-load-balancer-controller -n kube-system
eksctl delete iamserviceaccount --cluster=mi-cluster --namespace=kube-system --name=aws-load-balancer-controller


## Desplegar load balancer controller
# https://artifacthub.io/packages/helm/aws/aws-load-balancer-controller Liga para ver el comando
# para agregar el repo a helm (helm repo add eks https://aws.github.io/eks-charts)
helm install aws-load-balancer-controller eks/aws-load-balancer-controller --set clusterName=mi-cluster -n kube-system --set serviceAccount.create=false --set serviceAccount.name=aws-load-balancer-controller

# desinstalar el ingress
helm uninstall aws-load-balancer-controller -n kube-system (desinstalar)
# Eliminar serviceAccount
kubectl delete serviceaccount aws-load-balancer-controller -n kube-system    y
eksctl delete iamserviceaccount --cluster=mi-cluster --namespace=kube-system --name=aws-load-balancer-controller
# Elimina politica dentro del rol
# Eliminar rol
aws iam delete-role --role-name nombre-del-rol
# Eliminar politica, poner su respectivo arn
aws iam delete-policy --policy-arn arn:aws:iam::590184078061:policy/AWSLoadBalancerControllerIAMPolicy


aws iam delete-role --role-name AmazonEKSLoadBalancerControllerRole

# Nota: Despues de desplegar el LoadBalancer, si das kubectl get all -A veras los recursos 
# creados (deployment, replicaset, LoadBalancer service, Pods) del LoadBalancer ingress 
# controller, y con la etiqueta aws-load-balancer-controller


